{"version":3,"sources":["components/ToDoForm.jsx","components/ToDo.jsx","App.js","reportWebVitals.js","index.js"],"names":["ToDoForm","addTask","useState","userInput","setUserInput","handleSubmit","e","preventDefault","className","onSubmit","value","type","onChange","currentTarget","onKeyDown","key","placeholder","ToDo","todo","toggleTask","removeTask","complete","onClick","id","task","height","viewBox","width","xmlns","d","App","todos","setTodos","filter","handleToggle","map","length","newItem","Math","random","toString","substring","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAiCeA,MA9Bf,YAA8B,IAAXC,EAAU,EAAVA,QACf,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAKMC,EAAe,SAACC,GAClBA,EAAEC,iBACFN,EAAQE,GACRC,EAAa,KAOjB,OACI,uBAAMI,UAAU,OAAOC,SAAUJ,EAAjC,UACI,uBAAOG,UAAU,QACbE,MAAOP,EACPQ,KAAK,OACLC,SAlBS,SAACN,GAClBF,EAAaE,EAAEO,cAAcH,QAkBrBI,UAXW,SAACR,GACP,UAAVA,EAAES,KACDV,EAAaC,IAUTU,YAAY,gGAEhB,gGCLGC,MArBf,YAA+C,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAC7B,OACI,sBAAKZ,UAAU,YAAf,UACI,qBAAKA,UAAWU,EAAKG,SAAW,mBAAqB,YACjDC,QAAS,kBAAMH,EAAWD,EAAKK,KADnC,SAEKL,EAAKM,OAEV,qBAAKhB,UAAU,cAAcc,QAAS,kBAAMF,EAAWF,EAAKK,KAA5D,SACI,+BACI,qBAAKE,OAAO,WACZC,QAAQ,sBACRC,MAAM,WACNC,MAAM,6BAHN,SAII,sBAAMC,EAAE,0lBCkCjBC,MA3Cf,WACE,MAA0B5B,mBAAS,IAAnC,mBAAO6B,EAAP,KAAcC,EAAd,KAYMZ,EAAa,SAACG,GAClBS,EAAS,YAAID,EAAME,QAAO,SAACf,GAAD,OAAUA,EAAKK,KAAOA,QAE5CW,EAAe,SAACX,GACpBS,EAAS,YACJD,EAAMI,KAAI,SAACjB,GAAD,OACXA,EAAKK,KAAOA,EAAZ,2BAAqBL,GAArB,IAA2BG,UAAWH,EAAKG,WAA3C,eAA2DH,SAKjE,OACE,sBAAKV,UAAU,OAAf,UACE,wBAAQA,UAAU,MAAlB,SACE,uGAAmBuB,EAAMK,YAE3B,cAAC,EAAD,CAAUnC,QA1BE,SAACE,GACf,GAAGA,EAAU,CACX,IAAMkC,EAAU,CACdd,GAAIe,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAE,GAC3CjB,KAAMrB,EACNkB,UAAU,GAEZW,EAAS,GAAD,mBAAKD,GAAL,CAAYM,SAoBnBN,EAAMI,KAAI,SAACjB,GACV,OACE,cAAC,EAAD,CACAA,KAAMA,EACNC,WAAYe,EACZd,WAAYA,GACPF,EAAKK,WC9BLmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.66245bd3.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\nfunction ToDoForm({addTask}) {\r\n    const [userInput, setUserInput] = useState('')\r\n\r\n    const handleChange = (e) => {\r\n        setUserInput(e.currentTarget.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        addTask(userInput)\r\n        setUserInput('')\r\n    }\r\n    const handleKeyPress = (e) => {\r\n        if(e.key === 'Enter'){\r\n            handleSubmit(e)\r\n        }\r\n    }\r\n    return (\r\n        <form className='form' onSubmit={handleSubmit}>\r\n            <input className='input'\r\n                value={userInput} \r\n                type=\"text\" \r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyPress}\r\n                placeholder='Введите значение'\r\n            />\r\n            <button>Сохранить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ToDoForm;","import React from 'react';\r\n\r\nfunction ToDo({todo, toggleTask, removeTask}) {\r\n    return (\r\n        <div className=\"item_todo\">\r\n            <div className={todo.complete ? 'item_text strike' : 'item_text'}\r\n                onClick={() => toggleTask(todo.id)}>\r\n                {todo.task}\r\n            </div>\r\n            <div className='item_delete' onClick={() => removeTask(todo.id)}>\r\n                <span>\r\n                    <svg height=\"18.696pt\"\r\n                    viewBox=\"0 0 365.696 365.696\" \r\n                    width=\"18.696pt\" \r\n                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"m243.1875 182.859375 113.132812-113.132813c12.5-12.5 12.5-32.765624 0-45.246093l-15.082031-15.082031c-12.503906-12.503907-32.769531-12.503907-45.25 0l-113.128906 113.128906-113.132813-113.152344c-12.5-12.5-32.765624-12.5-45.246093 0l-15.105469 15.082031c-12.5 12.503907-12.5 32.769531 0 45.25l113.152344 113.152344-113.128906 113.128906c-12.503907 12.503907-12.503907 32.769531 0 45.25l15.082031 15.082031c12.5 12.5 32.765625 12.5 45.246093 0l113.132813-113.132812 113.128906 113.132812c12.503907 12.5 32.769531 12.5 45.25 0l15.082031-15.082031c12.5-12.503906 12.5-32.769531 0-45.25zm0 0\"/>\r\n                    </svg>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDo;","import './index.scss';\nimport React, { useState } from 'react';\nimport ToDoForm from './components/ToDoForm';\nimport ToDo from './components/ToDo';\n\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n\n  const addTask = (userInput) => {\n    if(userInput){\n      const newItem = {\n        id: Math.random().toString(36).substring(2,9),\n        task: userInput,\n        complete: false,\n      }\n      setTodos([...todos, newItem])\n    }\n  }\n  const removeTask = (id) => {\n    setTodos([...todos.filter((todo) => todo.id !== id)])\n  }\n  const handleToggle = (id) => {\n    setTodos([\n      ...todos.map((todo) => \n        todo.id === id ? {...todo, complete: !todo.complete} : {...todo}\n      )\n    ])\n  }\n\n  return (\n    <div className='todo'>\n      <header className='top'>\n        <h1>Список задач: {todos.length}</h1>\n      </header>\n      <ToDoForm addTask={addTask}/>\n      {todos.map((todo) => {\n        return (\n          <ToDo \n          todo={todo}\n          toggleTask={handleToggle}\n          removeTask={removeTask} \n          key={todo.id}/>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}